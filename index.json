[{"categories":["軟體"],"content":"Atom-mermaid 2022/5/19 下午10:59:26\nhttps://mermaid-js.github.io/mermaid/#/ \n Atom-mermaid   前言  Flowchart - Example 1  Flowchart - Example 2  Sequence  Mermaid - Graph  Mermaid - Flowchart  Mermaid - Pie  Mermaid - Gantt     前言  一畫勝千言(A picture is worth a thousand words)\n 您可以在 Markdown 文件中使用自帶的 Mermaid (美人魚) 套件來用文字(像在寫程式)快速創建和編輯出好看又實用的圖形。以下是我會用到的類型，更多可參考 這裡 。\n Flowchart - Example 1 Markdown寫法\n` ` `flow start=\u0026gt;start: 開始 loginInfo=\u0026gt;inputoutput: 數據登入 verifyLogin=\u0026gt;subroutine: 登入驗證 isSuccess=\u0026gt;condition: 驗證成功？ respondSuccess=\u0026gt;operation: 回應成功 responseFailure=\u0026gt;operation: 回應失敗 end=\u0026gt;end: 結束 start-\u0026gt;loginInfo-\u0026gt;verifyLogin-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;respondSuccess-\u0026gt;end isSuccess(no)-\u0026gt;responseFailure-\u0026gt;loginInfo ` ` ` 結果\nstart=\u0026gt;start: 開始 loginInfo=\u0026gt;inputoutput: 數據登入 verifyLogin=\u0026gt;subroutine: 登入驗證 isSuccess=\u0026gt;condition: 驗證成功？ respondSuccess=\u0026gt;operation: 回應成功 responseFailure=\u0026gt;operation: 回應失敗 end=\u0026gt;end: 結束 start-\u0026gt;loginInfo-\u0026gt;verifyLogin-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;respondSuccess-\u0026gt;end isSuccess(no)-\u0026gt;responseFailure-\u0026gt;loginInfo  Flowchart - Example 2 Markdown寫法\n` ` `flow start=\u0026gt;start: 開始 dataCollect=\u0026gt;operation: 資料收集 dataProcess=\u0026gt;operation: 資料處理 isSuccess=\u0026gt;condition: 正確？ end=\u0026gt;end: 結束 start-\u0026gt;dataCollect-\u0026gt;dataProcess-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;end isSuccess(no)-\u0026gt;dataCollect ` ` ` 結果\nstart=\u0026gt;start: 開始 dataCollect=\u0026gt;operation: 資料收集 dataProcess=\u0026gt;operation: 資料處理 isSuccess=\u0026gt;condition: 正確？ end=\u0026gt;end: 結束 start-\u0026gt;dataCollect-\u0026gt;dataProcess-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;end isSuccess(no)-\u0026gt;dataCollect  Sequence Markdown寫法\n` ` `sequence PC-\u0026gt;Device: Get Data Device--\u0026gt;PC: Data Note left of PC: 192.168.1.1 Note right of Device: 192.168.1.2 ` ` ` 結果\nPC-\u0026gt;Device: Get Data Device--\u0026gt;PC: Data Note left of PC: 192.168.1.1 Note right of Device: 192.168.1.2  Mermaid - Graph Markdown寫法\n` ` `mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; ` ` ` 結果\ngraph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D;  Mermaid - Flowchart Markdown寫法\n` ` `mermaid flowchart TD A[Run] --\u0026gt; B{Is it Already Run?}; B -- Yes --\u0026gt; C[Do not deploy]; B -- No --\u0026gt; D[Run deploy.sh]; C --\u0026gt; E[END] D --\u0026gt; F[Wait 1 sec] F --\u0026gt; B ` ` ` 結果\nflowchart TD A[Run] --\u0026gt; B{Is it Already Run?}; B -- Yes --\u0026gt; C[Do not deploy]; B -- No --\u0026gt; D[Run deploy.sh]; C --\u0026gt; E[END] D --\u0026gt; F[Wait 1 sec] F --\u0026gt; B  Mermaid - Pie Markdown寫法\n` ` `mermaid pie showData title 工作分配表 \u0026#34;讀書\u0026#34; : 15 \u0026#34;研究\u0026#34; : 60 \u0026#34;App開發\u0026#34; : 20 \u0026#34;其他\u0026#34; : 5 ` ` ` 結果\npie showData title 工作分配表 \u0026#34;讀文獻\u0026#34; : 5 \u0026#34;研究過程\u0026#34; : 70 \u0026#34;寫論文\u0026#34; : 20 \u0026#34;其他\u0026#34; : 5  Mermaid - Gantt Markdown寫法\n` ` `mermaid gantt title 甘特圖 dateFormat MM-DD section 系統開發時程 項目啓動 :done,des1,03-09,7d 項目計劃 :done,des2,after des1,6d 需求分析 :done,des3,after des2,9d 軟件設計 :done,des4,after des3,12d 軟件編碼 :crit,active,des5,04-07,20d 軟件測試 :des6,04-14,15d 項目交付 :des7,after des6,4d ` ` ` 結果\ngantt title 甘特圖 dateFormat MM-DD section 系統開發時程 項目啓動 :done,des1,03-09,7d 項目計劃 :done,des2,after des1,6d 需求分析 :done,des3,after des2,9d 軟件設計 :done,des4,after des3,12d 軟件編碼 :crit,active,des5,04-07,20d 軟件測試 :des6,04-14,15d 項目交付 :des7,after des6,4d ","date":"2022年05月20日","img":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature_hu4d00a60f032c5753b25d3114a66f076c_33039_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature_hu4d00a60f032c5753b25d3114a66f076c_33039_180x0_resize_q75_box.jpg","tags":["Markdown"],"title":"Markdown文件中畫圖"},{"categories":["生活","維修"],"content":"DIY強效電鍍品還原(清潔)劑 常常看Youtube-海賊王DIY日記 ，他都會無私的分享生活中的妙招，其中這篇 就很實用，記錄一下配方及使用注意事項。\n適用對象 表面有鏽斑，例如：鐵、電鍍製品、不鏽鋼\n化工材料  鹽酸 (濃度17%) 非離子介面活性劑  蝦皮上買的\n 其他材料  手套 乾布 衛生紙  藥劑比例 界面活性劑:鹽酸 = 3:97 (調製時請保持環境通風)使用方式  帶手套，將調配好的藥劑適量的佔在乾布上 塗在電鍍品上並來回擦拭表面 (請先局部測試，有效果再大規模使用) 最後記得用衛生紙擦乾，不要用水洗! (重要)  為何需要加界面活性劑？ 界面活性劑可分解表面油脂，讓鹽酸能更徹底的接觸到鏽斑，加速除鏽效果。\n 家中有小孩的，千萬不要把這樂劑液體裝在飲料罐裡，避免被小孩當飲料喝。 如家中沒小孩又非得裝在飲料罐裡時，請在飲料罐外寫上內容物及警語!!參考資料 海賊王DIY日記  \n (效果驚人)\n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f015-diy/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f015-diy/feature_hu4d00a60f032c5753b25d3114a66f076c_12585_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f015-diy/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f015-diy/feature_hu4d00a60f032c5753b25d3114a66f076c_12585_180x0_resize_q75_box.jpg","tags":["DIY"],"title":"DIY強效電鍍品還原(清潔)劑"},{"categories":["遊戲機"],"content":"Game and Watch - ZELDA電路板      參考資料 Landsat網友提供@Discord(stacksmashing) \n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature_hu4d00a60f032c5753b25d3114a66f076c_19975_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature_hu4d00a60f032c5753b25d3114a66f076c_19975_180x0_resize_q75_box.jpg","tags":["Game\u0026Watch"],"title":"Game and Watch - ZELDA電路板"},{"categories":["生活","料理"],"content":"工科男料理 - 香煎櫛瓜 新鮮的櫛瓜吃來爽脆又清甜，表皮薄而光滑的櫛瓜能連皮帶籽一起食用，處理起來可說是非常方便(工科男最愛)。今天來挑戰簡單好吃的 香煎櫛瓜 。\n準備食材  櫛瓜 切去兩邊蒂頭，切成約0.5公分的厚度 麵粉 適量 (地瓜粉也可以) 蛋 1顆 鹽巴 適量 香料 (黑胡椒粒或您喜歡的香料) 適量  步驟  打蛋，並加入鹽巴及香料調味 將櫛瓜表面均勻沾上一層薄麵粉 熱鍋下油，將沾了蛋液的櫛瓜兩面煎至金黃色即可  PS.剩下沒沾完的蛋液別浪費，可煎來吃喔!!重點 蛋液可以調鹹一點，這樣吃起來比較有味道。如何知道櫛瓜熟了呢？兩面煎至金黃色中間用筷子可輕易插入即可。\n成果  參考資料 簡單哥 煎櫛瓜 \n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature_hu4d00a60f032c5753b25d3114a66f076c_108396_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f012-cooking-02/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature_hu4d00a60f032c5753b25d3114a66f076c_108396_180x0_resize_q75_box.jpg","tags":[],"title":"薑絲炒絲瓜"},{"categories":["軟體"],"content":"如何完整備份/還原SD卡(Linux篇) 測試環境：Linux OS 準備工作 插入SD卡後，先使用 dmesg 或 df 等指命找出備份設備的編號，會是 sd# (#: b, c, d..)。一般來說，系統碟會是sda。\n備份 sudo dd if=/dev/sdx of=/path/to/backup.img bs=1M status=progress # if 來源地 # of 備份地 # /path/to/backup.img 備份後檔案放這位置 還原 推薦使用 balenaEtcher  免費工具。\n 參考資料 Tsung\u0026rsquo;s Blog \n","date":"2022年05月14日","img":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature_hu4d00a60f032c5753b25d3114a66f076c_6475_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature_hu4d00a60f032c5753b25d3114a66f076c_6475_180x0_resize_q75_box.jpg","tags":["Linux"],"title":"如何完整備份/還原SD卡(Linux篇)"},{"categories":["生活","料理"],"content":"工科男料理 - 薑絲炒絲瓜 秋天到，正是吃瓜時。絲瓜可以變化出很多種好吃的料理，例如：絲瓜炒蛋、絲瓜蛤蜊或絲瓜麵線。今天來挑戰簡單好吃的 薑絲炒絲瓜 。\n準備食材  絲瓜 削皮去兩邊蒂頭，切成約一公分的厚度 薑 切長條 鹽 隨意 熱水  步驟  冷油(多放一點)即可下絲瓜，讓每個絲瓜都吸到油 倒熱水(不用太多，蓋到絲瓜平放高度1/2即可) 蓋鍋悶煮3分鐘 起鍋前，放入薑絲拌炒一下  重點 要讓絲瓜顏色翠綠重點是 不放鹽 ，並且 煮的時間不要過長 (所以用熱水來縮短時間)\n成果  (沒放蝦皮一樣好吃)\n參考資料 阿基師家常菜 薑絲炒絲瓜 \n","date":"2022年05月14日","img":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature_hu4d00a60f032c5753b25d3114a66f076c_74098_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f011-cooking-01/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature_hu4d00a60f032c5753b25d3114a66f076c_74098_180x0_resize_q75_box.jpg","tags":[],"title":"薑絲炒絲瓜"},{"categories":["軟體"],"content":"Markdown使用心得記錄 Markdown哲學   易讀易寫：Markdown的語法全由 [標點符號] 所組成。 可讀性強：可以直接以 [純文字] 發佈，並且看起來不會像是由許多標籤或是格式指令所構成。   Markdown基本語法 § 標題(Title) 將 # 符號置於標題前面便能將文字顯示為標題大小，#的數量決定標題大小，#號後面有空一格。\n語法：\n# 這是H1標題 ## 這是H2標題 ### 這是H3標題 #### 這是H4標題 ##### 這是H5標題 ###### 這是H6標題 結果：\n這是H1標題 這是H2標題 這是H3標題 這是H4標題 這是H5標題 這是H6標題 § 引用文字(Block) 利用 \u0026gt; 符號顯示引用文字，\u0026gt; 號後面有空一格。\n語法：\n\u0026gt; 靜思語：生氣是拿別人做錯的事來懲罰自己 結果：\n 靜思語：生氣是拿別人做錯的事來懲罰自己\n § 文字格式(Styling text)  在文字前後加*，便顯示斜體 在文字前後加**，便顯示粗體 ~~ ~~中間的文字會加上刪除線  語法：\n**粗體** *斜體* ~~我寫錯了~~ 結果：\n粗體 斜體 我寫錯了 § 列點(List) 無序列點：可以用「*」或「-」或「+」列點，記得後面的文字之間要空一格。\n語法：\n* Java * Python - Boy - Girl + Sun + Moon 結果：\n Java Python   Boy Girl   Sun Moon  有序列表：直接以1、2、3、4…列點。列點與後面的文字之間也要空一格。\n語法：\n1. 前言 2. 目標 3. 結論 結果：\n 前言 目標 結論  巢狀列表：需縮排的列表，使用半型空白空3格。\n語法：\n1. 目標 1. 發表文章 2. 申請專利 3. 貢獻 2. 研究著作 * Conference * SCI/EI 3. 結論 結果：\n 目標  發表文章 申請專利 貢獻   研究著作  Conference SCI/EI   結論   § 程式碼格式(Code formatting) 在文字區塊的上下方輸入3個反引號「```」， 或用4個空格就可以mark出程式碼區塊。\n語法：(前面不用空隔)\n```python import numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) ``` 結果：(沒標記語法格式)\nimport numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) 結果：(標記語法格式python)\nimport numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) 語法格式keyword: shell, cpp, python, ruby, javascript, SQL, \u0026hellip;\n§ 連結(URL) [連結文字](連結位置)\n語法：\n[Google](https://www.google.com) 結果： Google \n§ 表格(Table) 利用分割符號”-“和”|”建立表格。:可用來決定文字對齊方式(置中/靠左/靠右)\n語法：\n| 姓名 | 住址 | 學號 | | :---- | :--: | ---: | | 阿華田 | 台北 | 25 | | 李大明 | 台中 | 28 | 結果：\n   姓名 住址 學號     阿華田 台北 25   李大明 台中 28    參考資料   Markdown說明 \n  深藏若虛 - Markdown 表格語法原則 \n  ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature_hu4d00a60f032c5753b25d3114a66f076c_13782_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f010-markdown-study/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature_hu4d00a60f032c5753b25d3114a66f076c_13782_180x0_resize_q75_box.jpg","tags":["Markdown"],"title":"Markdown使用心得記錄"},{"categories":["軟體"],"content":"Python3 print with timestamp import sys import datetime old_f = sys.stdout class F: def write(self, x): old_f.write(x.replace(\u0026#34;\\n\u0026#34;, \u0026#34; [%s]\\n\u0026#34; % str(datetime.datetime.now()))) def flush(self): pass sys.stdout = F() print(\u0026#39;Hello World\u0026#39;) 結果：\n Hello World [2021-05-11 22:57:49.179915]\n ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_180x0_resize_q75_box.jpg","tags":["Python"],"title":"Python - Print任何東西後面接時間"},{"categories":["軟體"],"content":"sys.version_info sys.version_info提供一組 tuple 來表示當前 Python 的版本\nimport sys Py2 = sys.version_info.major == 2 Py3 = sys.version_info.major == 3 如此可用來判斷目前是使用 Python 2 或 Python 3，進一步控制程式走向\n應用場景  判斷Python版本，分別載入不同版本的函式庫\n import sys if sys.version_info[0] \u0026gt;= 3: import PySimpleGUI as sg else: import PySimpleGUI27 as sg ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f008-python-check-version/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_180x0_resize_q75_box.jpg","tags":["Python"],"title":"Python - 程式碼中判斷當前Python版本"},{"categories":["遊戲機"],"content":"安裝 CheatMaster Fusion (CMF) 將下載的CMF檔COPY到SD卡根目錄底下。\n下載網路上找到的PSP金手指大全1215个CMF金手指合集 同樣將檔案COPY到SD卡裡\n操作方式 進到遊戲中後按「音符」鍵可叫出選單\n 在CMF設定中啟動自動載入cmf檔(不然金手指檔案太多不好找)\n亂碼問題 將所有的cmf檔轉成Big5格式\n在Windows下還是顯示亂碼，但在CM中可正常顯示繁體中文。\nCMF還可以 玩GBA模擬器時，亦可叫出找記憶體位置修改遊戲數值。\n","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature.png","largeImg":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature_hu3139b2cf40873b452da89276f47ee888_39324_500x0_resize_box_3.png","permalink":"https://crrsn.github.io/blog/posts/f007-psp-cheat/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature_hu3139b2cf40873b452da89276f47ee888_39324_180x0_resize_box_3.png","tags":["金手指","PSP"],"title":"Sony PSP 金手指 CMF"},{"categories":["遊戲機"],"content":"Yahoo拍賣 買的二手 PSone 主機  型號  內部 (有改機晶片？)   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f006-psone/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f006-psone/feature_hu4d00a60f032c5753b25d3114a66f076c_11259_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f006-psone/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f006-psone/feature_hu4d00a60f032c5753b25d3114a66f076c_11259_180x0_resize_q75_box.jpg","tags":["PS","PSOne"],"title":"Sony PSone 遊戲主機"},{"categories":["遊戲機","維修"],"content":"拿到一台「月光寶盒」型的機板，HDMI頭故障無法輸出  HDMI規格   處理方式 使用熱風槍將故障的HDMI Port給拆下來，換上新買的後就正常了。\n","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature_hu4d00a60f032c5753b25d3114a66f076c_15713_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature_hu4d00a60f032c5753b25d3114a66f076c_15713_180x0_resize_q75_box.jpg","tags":["HDMI"],"title":"月光寶盒 HDMI Port 故障更換"},{"categories":["遊戲機"],"content":"GW內部 - Mario 記得先斷電\n 換晶片(MX25U51245GZ4I00) 型號：MX25U51245GZ4I00 連結：Digi-Key \n 腳位圖 網路上找到的\n    功能 RP3腳位 GW TYPE-C     5V 2 B9   GND 20 B1   SWDIO 18 (GPIO 24) B6   SWCLK 22 (GPIO 25) B7    使用Raspberry Pi 3進行刷機(雙系統) 根據參考資料 進行設定\n 如何提高刷機成功率  將GW的電池斷開 按住GW的Power開關後插上TYPE-C供電 執行刷機指令(持續按住GW的Power開關) 待畫面跑到Loading image into RAM時，再放開GW的開關，刷機會持續至完成  參考資料  麥斯的古中作樂 MaXX\u0026rsquo;s Retro Fun   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f004-gw/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f004-gw/feature_hu4d00a60f032c5753b25d3114a66f076c_22985_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f004-gw/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f004-gw/feature_hu4d00a60f032c5753b25d3114a66f076c_22985_180x0_resize_q75_box.jpg","tags":["Game\u0026Watch"],"title":"Game and Watch 刷機研究 - 硬體篇"},{"categories":["軟體"],"content":"排除方法 Method 1: 只排除這個git專案 利用Terminal，進到git專案下，新增.gitignore檔案，並在裡頭輸入要排除追蹤的檔案名稱。操作如下：\n# 新增 touch ~/.gitignore # 編輯 vim ~/.gitignore # .gitignore檔案 .DS_Store .gitignore Method 2: 全面排除所有git專案 在根目錄下(MAC/Linux 系統就是指使用者名稱)，新增一個 ~/.gitignore_global檔案。之後用文字編輯器打開，並在裡頭輸入要排除的檔案名稱。操作如下：\n# 新增 touch ~/.gitignore_global # 編輯 vim ~/.gitignore_global # 在.gitignore_global檔案中加入 .DS_Store .DS_Store? .Spotlight-V100 .Trashes 存檔後，再輸入以下程式碼\ngit config --global core.excludesfile ~/.gitignore_global PS: 若先前已追蹤過.DS_Store檔該怎麼辦？ 在git專案下將其刪除追蹤即可，指令如下\n# 移除當前資料夾下的.DS_Store文件 git rm --cached .DS_Store 完成後，再重新 commit 並Push到遠端即可。\ngit add . git commit -m \u0026#39;xxxx\u0026#39; git push -u origin main 參考資料  地瓜大的飛翔旅程   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature_hu4d00a60f032c5753b25d3114a66f076c_10191_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f003-git-ignore/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature_hu4d00a60f032c5753b25d3114a66f076c_10191_180x0_resize_q75_box.jpg","tags":["Git"],"title":"Git如何忽略.DS_Store等排除檔案"},{"categories":["軟體"],"content":"文章目錄  文章目錄   測試平台  Atom介紹  什麼是Markdown (md檔案格式)  準備工作  常用外掛  安裝外掛  外掛介紹   markdown-toc  markdown-preview-enhanced  insert-timestamp  language-markdown  markdown-img-paste  markdown-table-editor  markdown-to-pdf與pdf-view    參考資料     測試平台 Windows 10 \u0026amp; MAC OS 11.5.2\nAtom介紹 Atom 是 Github 專門為程式設計師推出的跨平臺文字編輯器，可支援Windows/Mac/Linux等常用作業系統。\n什麼是Markdown (md檔案格式) Markdown是一種使用普通文字編輯器編寫的標記語言，通過簡單語法可以使普通文字內容具有一定的格式，但無法任意使用其他字型或文字變色。Github上的Readme.md就是用Markdown語法寫成的。\n準備工作   安裝Atom軟體 (軟體下載 ) 設定Atom主題 Windows: (file-\u0026gt;settings-\u0026gt;Themes可以設定主題) / MAC: (Preferences-\u0026gt;Themes可以設定主題) 安裝常用外掛(packages)   常用外掛   markdown-toc(主要用來快速生成markdown目錄) markdown-preview-enhanced(含同步滾動預覽，Latex公式預覽) language-markdown(程式碼增強) markdown-img-paste(剪貼簿圖片快速貼上到md檔案) insert-timestamp(md檔案中快速插入當前時間,寫部落格或日誌常用) markdown-table-editor(md檔案快速生成表格) markdown-to-pdf (pdf生成匯出) pdf-view(pdf預覽)   安裝外掛 開啟Terminal執行：\n//安裝完Atom程式後，就可以使用apm指令 apm install markdown-toc apm install markdown-preview-enhanced apm install language-markdown apm install markdown-img-paste apm install insert-timestamp apm install markdown-table-editor //亦可以一次安裝多個外掛 apm install markdown-to-pdf pdf-view 外掛介紹  注意：如某外掛無法使用時，請到Atom的Settings(Mac是Preference)中的Install裡，利用search功能找到對應的外掛，將其Disable再Enable即可正常使用。\n  markdown-toc 主要使用它來快速生成目錄。使用ctrl+alt+c就可以生成目錄，使用ctrl+alt+u可以更新目錄。\n 下圖就是使用mardown-toc自動產生的目錄結構。注意：一定要有第一層「#」，才能正常顯示。\n  markdown-preview-enhanced 同步滾動預覽功能(支援預覽Latex公式)。使用方法是用Atom開啟一個*.md的檔案後，按ctrl+shift+m即可在右側開啟同步的滾動預覽頁面。\ninsert-timestamp 該外掛可以md檔案中快速插入當前時間，寫部落格或日誌時常用。安裝好後，enable外掛。使用ctrl+shift+alt+t就可以外掛當前時間。\nMAC的alt是option，按法如下圖\n language-markdown 程式碼著色增強外掛。除了能給程式碼著色，還提供了快捷的程式碼片段生成等功能。\nclass MyClass { // The class  public: // Access specifier  int myNum; // Attribute (int variable)  string myString; // Attribute (string variable) }; int main() { MyClass myObj; // Create an object of MyClass  // Access attributes and set values  myObj.myNum = 15; myObj.myString = \u0026#34;Some text\u0026#34;; // Print attribute values  cout \u0026lt;\u0026lt; myObj.myNum \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; cout \u0026lt;\u0026lt; myObj.myString; return 0; } markdown-img-paste 安裝這個外掛後，我們可以將用任意的截圖軟體截圖後(只要截圖儲存在剪貼簿中)，使用ctrl+shift+v就可將圖片貼上到.md檔案中，並生成一個空白的title讓你填寫，在預覽中顯示出圖片。這個圖片會預設儲存在.md檔案同目錄下的assets資料夾中。\n 在assets中自動產生\n markdown-table-editor 使用時在行首輸入|，然後按Tab，寫入這個單元格的內容，寫完了一個單元格再按Tab。即建立了一個單元格。寫完表格一行在最後面按enter會自動生成下一行同樣列數的單元格。\n格式：\n 結果：\n   外掛名稱 功能說明     markdown-toc 快速生成markdown目錄   markdown-preview-enhanced 同步滾動預覽   language-markdown 程式碼增強   markdown-img-paste 剪貼簿圖片快速貼上到md檔案    markdown-to-pdf與pdf-view 將md檔案快速儲存為pdf的外掛與pdf預覽外掛。\n按ctrl+s先儲存檔案，然後在編輯區點選右鍵-\u0026gt;Convert to PDF或者使用快捷鍵ctrl+alt+e可以匯出PDF並預覽，匯出的pdf預設與.md在同一資料夾內。\n參考資料  程式人生  YiTing隨筆記   ","date":"2022年05月10日","img":"https://crrsn.github.io/blog/posts/f002-atom/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f002-atom/feature_hu4d00a60f032c5753b25d3114a66f076c_19796_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f002-atom/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f002-atom/feature_hu4d00a60f032c5753b25d3114a66f076c_19796_180x0_resize_q75_box.jpg","tags":["Markdown","Atom"],"title":"讓Atom編輯Markdown文件更好用"},{"categories":null,"content":"大家好，歡迎來到工科男LEO's Blog網站\n這個網站主要是寫些「生活記錄、心得分享、個人筆記」等等…\n記錄一些我感興趣 或是 生活中遇到某些問題解決的方法與心得\n歡迎大家來交流\n","date":"2022年05月10日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/about/","series":null,"smallImg":"","tags":null,"title":"關於我"},{"categories":["生活"],"content":"我的第一篇Blog 2022年5月10日 建立人生第一個Blog網頁\n環境: MAC OS 11.5.2\nPath: .文件/website/blog\n使用工具介紹 HUGO網頁架構 參考教學: marcolee , cfanz \n註：cfanz所使用的風格有問題，所以改選用hugo-theme-bootstrap 風格\n需安裝 hugo mod npm pack npm install hugo server MacDown編輯工具  可用來編輯mackdown格式的文本。 [LINK] \nAtom維輯工具 詳見這篇 \n常用指令 啟動 Hugo 伺服器，指令如下。 http://localhost:1313/ \n# 看所有東西(含draft = true的文章) hugo server -D # 只顯示draft = false的文章 hugo server 新增頁面\nhugo new posts/name-of-post/index.zh-tw.md 用上面的方法會新增一個資料夾(name-of-post)就在./content/posts裡， 所有用到的圖片(ex: img.jpg)都可放在這裡面，要貼圖就下(img.jpg)即可。\n##如何發布到Github上 在blog根目錄下執行：\nhugo 進到./blog/public裡去進行git commit，最後再執行：\ngit push -u origin main Git指令 cd public git init git remote add origin https://github.com/your-git-id/your-repo-name.git git add . git ci -m \u0026#39;first commit\u0026#39; git push -u origin main ","date":"2022年05月10日","img":"https://crrsn.github.io/blog/posts/f001-firstblog/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f001-firstblog/feature_hu4d00a60f032c5753b25d3114a66f076c_13789_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f001-firstblog/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f001-firstblog/feature_hu4d00a60f032c5753b25d3114a66f076c_13789_180x0_resize_q75_box.jpg","tags":["Blog","第一次","Hugo"],"title":"建立人生第一個Blog網頁"}]