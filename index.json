[{"categories":["遊戲機","維修"],"content":"Nintendo Switch - Joy Con手把維修 前幾天在網路上收來一套二手故障的Nintendo Switch Joy Con手把\n上機測試發現，兩邊蘑菇頭搖桿都出現飄移情況，另外右側R鍵也無反應\n拆機清潔 首先把全部零件拆開來清潔 (需特別準備一支1.5Y字螺絲起子) (畢竟是二手商品，多少有留下一些手汗及油垢，所以得全拆開好好處理一下)\n (左側藍色手把拆解圖)\n (右側紅色手把拆解圖 - 多了紅外裝置及天線，拆解難度較左側高)\n蘑菇頭維修 把蘑菇頭小心打開用無水酒精清潔乾淨後組裝回去\n 詳細可參考Youtube-羊羹爸爸的教學影片 \n右側R鍵維修 右側R鍵是在電路板上(與左側L鍵設計不同)\n當使用者玩遊戲太過激動，大力按壓很容易把按鍵給弄壞，造成按鍵或焊盤脫落\n這種狀況最好教給專業維修人士處理(自誇?)，因為只能用飛線修理了，處理好的結果如下圖：\n 最後就是重新組裝起來，上機測試正常，成功修復所有問題!!\n注意  不想自己DIY清潔蘑菇頭的朋友，也可以直接買蘑菇頭來更換即可(兩邊同款式)\n  拆任何排線之前，記得先斷電池排線喔！\n ","date":"2022年10月05日","img":"https://crrsn.github.io/blog/posts/f024-ns-joycon-clean/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f024-ns-joycon-clean/feature_hu4d00a60f032c5753b25d3114a66f076c_104177_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f024-ns-joycon-clean/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f024-ns-joycon-clean/feature_hu4d00a60f032c5753b25d3114a66f076c_104177_180x0_resize_q75_box.jpg","tags":["DIY","NS"],"title":"Nintendo Switch - Joy Con手把維修"},{"categories":["維修"],"content":"藍芽音箱面板 - 話筒插頭故障維修記錄 這個藍芽音箱面板的「話筒插頭」因使用者插太大力而整個掉進去了…\n 拆開後發現整個焊盤都掉了… 這下麻煩了!!\n 原本的設計就不良，所有的力量都由焊盤在支撐，多次插拔後很容易就會被插爆!\n在認真觀察後發現，脫落焊盤旁邊可以刮出一點點的銅點\n利用這些銅點在經過一陣亂量後，找到可能的線路(電阻值接近零)，用飛線處理\n 如您技術好，也可以直接在銅點上進行延伸與焊接)\n  最後上機測試正常後，記得要再用膠給它加固一下喔!\n進一步研究話筒插頭接點 如下圖，這裡的話筒接頭使用了一個4-pole 3.5mm的插頭，腳位(pin)編號為2,3,4,5\n單音Mic只有兩個接點(如圖)，以下分別稱為Audio與Ground\n當話筒插入後，pin2與pin5會因為話筒的Ground而接通 (平時開路，所以可用來檢測是否有插入東西)\npin2與pin3也會因單音話筒插入而接通 (這裡pin3無作用，焊盤沒接到任何地方去)\npin4會接到話筒的Audio上\n ","date":"2022年09月15日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f023-fix-3_5mm-audio-jack/","series":null,"smallImg":"","tags":["DIY"],"title":"藍芽音箱面板-話筒插頭故障維修"},{"categories":["遊戲機","維修"],"content":"前言 在網路上買了一台故障的PSP2000型(被裝在PSP3000的殼…)\n故障狀況為：開機亮綠燈，但完全無畫面，推測是變磚了!!\n所以就來研究一下如何解磚吧!! GO GO!!\n 解磚 Step1: 制作一張Magic Memory Stick 用JigKick Media Creator軟體，選TA-088v3，製作一張SD卡放入PSP中\n Step2: 接線 準備一個USB-TTL轉換器，照下圖接線\n Step3: 執行刷機軟體 pysweeper 選Service Mode，按Start Service\n 把線touch到PSP的電池接點上\n刷機軟體會自動跑起來，等PSP上有畫面就表示開始解磚中\n   等跑完會顯示大大的OK，再重開機就OK了。\n結語 方法很簡單，但剛開始也是搞了好久…\n這個解磚方式聽說可以用在2000及3000型的機器上\n有機會收到3000型的磚機再來試試是否可行。\n參考資料 https://github.com/khubik2/pysweeper \nhttps://github.com/khubik2/JigKick-Media-Creator \nhttps://www.youtube.com/watch?v=ZiyRU0H7CU8\u0026t=24s\u0026ab_channel=akhubik \n","date":"2022年07月25日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f022-psp-unbrick/","series":null,"smallImg":"","tags":["PSP"],"title":"PSP解磚研究-PSP2000成功"},{"categories":["遊戲機"],"content":"256MB晶片 型號：MX66U2G45GXRI00 [購買連結] \n這顆晶片腳位是24-Ball BGA型式，需要製作轉接板才能方便的焊接到目前的電路板上。\nDiscord - stacksmashing上的大神(DNA64)有開發這個轉接板，可以跟他購買。\n BGA24-to-SOP8轉接板資料 https://github.com/DNA64/bga24-to-sop8-adapter \n Q: 但我想發揮DIY精神… 是否可以直接從BGA晶片上拉出8條線到主板呢？\n 原晶片的八支腳定義  分析轉接版接線圖 藍色：主板上的晶片八腳定義 (1~8)\n紅色：轉接版上的過孔 (A/B/C)\n黑色：BGA腳位圖\n綠字：BGA 5x5 點位圖\n 標示出256MB晶片使用的接點 轉接版上所使用的點位如下標示的紅點：\n 也就是中間一圈的腳位，剛好一一對應到主板上的8個焊盤。\n A: 可以直接焊接處理，水啦~\n 製作接線圖  開始焊接 - 晶片拉出八條線 (難度：★★★★★)\n使用0.14mm的直焊型漆包線 (35AWG)\n 開始焊接 - 接到主板上 (難度：★★★☆☆)\n 重新刷機 # https://github.com/BrianPugh/game-and-watch-patch cd game-and-watch-patch make PATCH_PARAMS=\u0026#34;--device=mario\u0026#34; LARGE_FLASH=1 flash_patched # https://github.com/olderzeus/game-and-watch-retro-go cd game-and-watch-retro-go make GNW_TARGET=mario EXTFLASH_SIZE_MB=255 EXTFLASH_OFFSET=1048576 INTFLASH_BANK=2 COVERFLOW=1 JPG_QUALITY=75 CODEPAGE=950 flash 成功升級256MB  ","date":"2022年06月15日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f021-gnw-256mb-chip/","series":null,"smallImg":"","tags":["Game\u0026Watch"],"title":"Game and Watch 刷機研究 - 換256MB晶片"},{"categories":["軟體"],"content":"kb. A minimalist knowledge base manager 一個極簡的知識庫管理器   kb. A minimalist knowledge base manager 一個極簡的知識庫管理器   測試環境  前言  kb簡介  安裝 kb  設置 kb 的指令別名(alias)  kb 常用指令  將知識庫同步到Github上  同步kb知識庫指令  Template使用方法  修改已在知識庫中的檔案參數(標題/類別/標籤)-使用 kb update 指令  查找特定資料  Apps (viewer and editor) for kb    遇到一個大問題 - 資料加密   Install git-crypt for Linux  Install git-crypt for MacOS  Init the git-crypt to repo  加密設定  git-crypt 注意事項    如何在另一台電腦上同步 kb 知識庫   參考資料      測試環境  Ubuntu 20.04.4 LTS CentOS MacOS  前言 發現自己太過頻繁地花時間在找特定的資料，例如：寫程式的指南、某台電腦的IP、如何使用某個Linux指令等等。所以在想是否有個小工具，能將常用資料加入知識庫中，方便快速搜索特定資料，增加工作效率，最好還能多台電腦同步。在Github上找到了一個名為 kb 的工具，可提供一種快速直觀的方式來獲取使用者建的知識庫，解決這個問題。\nkb簡介 kb 是一個極簡命令式知識庫管理器，可用來快速收集筆記、組織分類、及快速查找的功能。雖然 kb 主要針對基於文本的筆記收集，但它也支持非文本文件，例如圖像、pdf等。基本上，kb 提供了一種基於文本的簡潔方式來組織您的知識\nkb 的特點：\n 將筆記、指南、程序、備忘單的項目收集到一個有組織的知識庫中 可對數據加以分類並標記，例如：標題、類別、標籤等 (add) 可使用(或不使用)語法高亮顯示知識庫中的項目 (view) 可使用正則表達式來查找知識庫 (grep) 導入/導出整個知識庫 (import/export)  安裝 kb pip install -U git+https://github.com/gnebbia/kb 設置 kb 的指令別名(alias) cat \u0026lt;\u0026lt;EOF \u0026gt; ~/.kb_alias alias kbl=\u0026#34;kb list\u0026#34; alias kbe=\u0026#34;kb edit\u0026#34; alias kba=\u0026#34;kb add\u0026#34; alias kbv=\u0026#34;kb view\u0026#34; alias kbd=\u0026#34;kb delete --id\u0026#34; alias kbg=\u0026#34;kb grep\u0026#34; alias kbt=\u0026#34;kb list --tags\u0026#34; EOF echo \u0026#34;source ~/.kb_alias\u0026#34; \u0026gt;\u0026gt; ~/.bashrc source ~/.kb_alias kb 常用指令 #Add file kba fileName ## List files kbl kbl -v ## View file kbv fileName kbv --id #  (kbl)\n (kbl -v)\n將知識庫同步到Github上 # Create a repo at Github # The branch name change to \u0026#39;main\u0026#39; # Create kb git sync function kb sync init # enter your repo path: git@github.com:xxx/xxx.git # Rename the branch of kb git repo. and push one time # \u0026#39;git init\u0026#39; default set branch name to \u0026#39;master\u0026#39; not \u0026#39;main\u0026#39; # but kb sync command only accept \u0026#39;main\u0026#39; branch to push/pull cd ~/.local/share/kb git branch -m master main # 先手動push一次，之後就可以用kb sync push/pull的指令進行 git push --set-upstream origin main # or git push -u origin HEAD 同步kb知識庫指令 #從Github下載知識庫 kb sync pull #上傳知識庫到Github kb sync push # if you get error below: # Some error occurred while pushing the code # but this command will create a commit in /home/userName/.local/share/kb # mean your branch name is not right, you can pull manually by cd /home/userName/.local/share/kb git push Template使用方法 #列出目前所有template\rkb template list\r  #編輯template文件\rkb template edit default\r  (以#開頭的文字以黃色顯示) (以!開頭的文字以紅色顯示) (以;;開頭的文字以綠色顯示)\n例如有個文字內容為：\n# This is the Title\r;; comment here\r! red color text 使用kbv這個文件將顯示：  修改已在知識庫中的檔案參數(標題/類別/標籤)-使用 kb update 指令 #kb update help文件\rkb update -h\rusage: kb update [-h] [-i ID] [-t TITLE] [-c CATEGORY] [-g TAGS] [-a AUTHOR] [-s STATUS] [--template TEMPLATE]\r[-e] [-b BODY]\roptional arguments:\r-h, --help show this help message and exit\r-i ID, --id ID ID of the artifact to update\r-t TITLE, --title TITLE\rTitle to update\r-c CATEGORY, --category CATEGORY\rCategory to update\r-g TAGS, --tags TAGS Tags to update in the form \u0026#34;tag1;tag2;...;tagN\u0026#34;\r-a AUTHOR, --author AUTHOR\rAuthor to update\r-s STATUS, --status STATUS\rStatus to update\r--template TEMPLATE Template to update\r-e, --edit-content Edit content of the artifact with an editor\r-b BODY, --body BODY Update the body of the artifact (erases the current content) 使用方法：kb update -i 4 -t TEST_KB -c manual -g \u0026ldquo;test;kb\u0026rdquo;\n 查找特定資料 #檔名有gui的資料 kbl gui #Tags有kb的資料 kbl -g kb #Tags有kb + 在default分類中的資料 kbl -g kb -c default Apps (viewer and editor) for kb # Install GNOME Image Viewer sudo apt-get install eog # Install Gedit sudo apt-get install gedit # Set default editor tool export EDITOR=/usr/bin/gedit # Install PDF Viewer sudo apt-get install evince # Install Markdown Editor sudo apt-get install retext # change file name to *.mkd kb update -i 1 -t kb_README.mkd # using kbv also can modify the file # but using kve will open file with gedit  遇到一個大問題 - 資料加密 成功使用kb sync push將知識庫上傳Github了，但是…\n這樣我的所有「私人筆記資料」不就被大家看光光了嗎？(沒錯)\n後來找到\u0026rsquo;git-crypt\u0026rsquo;這個git的輔助工具，可在git push/pull時進行加密/解密\n如下是經過git-crypt上傳的純文字檔，無法在Github上顯示 (水啦)\n Install git-crypt for Linux # Install openssl sudo apt-get install libssl-dev # for Ubuntu yum install openssl-devel # for CentOS # Clone the git-crypt repo., make and install git clone https://github.com/AGWA/git-crypt cd git-crypt make make install Install git-crypt for MacOS brew install git-crypt Init the git-crypt to repo cd /home/userName/.local/share/kb git-crypt init #設定哪些資料需要進行加密 vim .gitattributes data/** filter=git-crypt diff=git-crypt .gitattributes !filter !diff 加密設定 #Generate key，填入User_ID gpg --gen-key gpg --list-keys #List key # Add key to git-crypt git-crypt add-gpg-user USER_ID #export the key git-crypt export-key ~/mykey  git-crypt 注意事項  在設定好 git-crypt 前的資料不會被加密 產生的key可用export方式保存，之後別台電腦要使用   如何在另一台電腦上同步 kb 知識庫 #Gen a key, and copy key into github ssh-keygen -t rsa -b 4096 -C \u0026#34;Github_Mail_Address\u0026#34; eval \u0026#34;$(ssh-agent -s)\u0026#34; ssh-add ~/.ssh/id_rsa vim ~/.ssh/id_rsa.pub #Install git-crype tool git clone https://github.com/AGWA/git-crypt make make install #Install kb tool, set the alias, add a test_kb.txt file for test pip install -U git+https://github.com/gnebbia/kb kba test_kb.txt # using kba and kbe to find the location of kb data path # is in: ~/.local/share/kb/data/default/test_kb.txt # remove this kb folder cd ~/.local/share/ rm -rf kb #Clone my kb repo to ~/.local/share/ git clone git@github.com:xxx/xxx.git #Copy myKey file to this PC #Unlock this repo git-crypt unlock /opt/mykey #Test the kb function kbl kb sync pull kb sync push 參考資料 kb. A minimalist knowledge base manager \ngit-crypt - transparent file encryption in git \n","date":"2022年06月02日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f020-kb/","series":null,"smallImg":"","tags":["kb","心得","Git"],"title":"kb知識庫管理器-使用心得"},{"categories":["軟體"],"content":"Windows 10 - WSL Ubuntu X-windows設定 2022/5/31 下午10:12:39\n安裝Windows版的XLaunch工具  設定Ubuntu參數 #vim ~/.profile，加入下面參數後重開Ubuntu\rexport DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk \u0026#39;{print $2}\u0026#39;):0 設定XLaunch參數 開啟XLaunch，Display settings使用預設值，點下一步。\n Client startup使用預設值，點下一步。\n Extra settings，勾選Disable access control，並在Additional parameters for VcXsrv中填入-ac參數，點下一步。\n Configuration complete點完成。\n 可點Save configuration將上面的設定儲存成一個*.xlaunch的檔案，未來可直接點這個檔案來開啟XLaunch。\n Ubuntu可測試的程式  Ubuntu需要安裝一些x11-tools的套件\n xclock / xeyes / xclipboard / gitk 等等。\n    課外補充  在Windows PowerShell(系統管理員)中，下\u0026rsquo;wsl \u0026ndash;shutdown\u0026rsquo;可真正關閉Ubuntu系統。 在Windows PowerShell(系統管理員)中，下\u0026rsquo;usbipd wsl list\u0026rsquo;可列出目前接在Windows下的USB裝置   \u0026lsquo;usbipd wsl attach \u0026ndash;busid 4-2\u0026rsquo;可將4-2的裝置掛載到Ubuntu系統中   \u0026lsquo;usbipd wsl detach \u0026ndash;busid 4-2\u0026rsquo;可卸載  參考資料  https://superuser.com/questions/1476086/error-cant-open-display-0   ","date":"2022年05月31日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f019-ubuntu-xlaunch/","series":null,"smallImg":"","tags":["Ubuntu","心得","X-windows"],"title":"Windows 10 - WSL Ubuntu X-windows設定"},{"categories":["遊戲機","維修"],"content":"Console Repare - HDMI/Type-C Port Diode Readings Switch Type-C A5 (CC1) short Switch Type-C port found a short in A5 (CC1) Line.\nSOLVED\nRemoved M92 - short cleared, replaced M92 all good.\nNOTE\nCC1/CC2 go to M92T36, on some models it also passes through a small diode array. Either one of those can cause a short there.\n Switch M92T36 IC   Switch OLED Charger Port Buy It     Swich OLED charge ports Switch OLED Diode readings  Switch Lite Switch Lite diode readings\n PS5 PS5 Diode readings with HDMI breakout board\n XBOX Series X Xbox Series X - HDMI Port Diode readings\n XBOX One X  XBOX Series S  出處：\nFACEBOOK-Ed Waldrop \nFACEBOOK-Ed Waldrop \n","date":"2022年05月24日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f018-console-repare-diode-readings/","series":null,"smallImg":"","tags":["Switch","PS5","XBOX"],"title":"遊戲主機維修 - Diode檔讀值"},{"categories":["生活"],"content":"2022報稅個人心得記錄  2022報稅個人心得記錄  - 所得總額  - 薪資所得特別扣除額 (20萬 * 有薪資收入人數)  - 標準扣除額 vs. 列舉扣除額  - 全部免稅額 (8.8萬元；\u0026gt;70歲長者13.2萬元)  - 基本生活費總額 (192,000元 * 人數)  - 基本生活費差額  - 基本稅額  - 選用ATM繳稅很方便  - 稅制重點與節稅方法  - 參考資料   所得總額  全年薪資收入總額 - 薪資所得特別扣除額\n 薪資所得特別扣除額 (20萬 * 有薪資收入人數) 薪資所得特別扣除額是指納稅義務人、配偶或是扶養親屬，如果有薪資收入採定額扣除的人，每人最高可扣除20萬／年。\n標準扣除額 vs. 列舉扣除額  如標準扣除額(120,000元)大於列舉扣除額，則一般扣除額會使用標準扣除額。\n 標準扣除額是固定12萬，不用檢附任何單據或證明文件，即可直接扣除，單身者12萬、夫妻則是NT24萬。\n而列舉扣除額又細分為6大項目，要看這6大項目的所得稅資料，金額一筆一筆加總，得出的金額則可被扣除，需要檢附證明文件。\n全部免稅額 (8.8萬元；70歲長者13.2萬元) 由於物價上漲幅度未達調整門檻，2022年申報綜所稅的免稅額同樣維持8.8萬元（年滿70歲以上長者13.2萬元）\n基本生活費總額 (192,000元 * 人數) 依公告每人基本生活所需的費用192,000元乘以納稅者、配偶及申報受扶養親屬人數。\n基本生活費差額 基本生活費差額 = 基本生活費總額 - 全部免稅額 - 一般扣除額 - \u0026hellip;\n網友說：計算綜所稅時，可運用基本生活費的「差額」來減稅。做法：只要基本生活費總額大於「免稅額＋一般扣除額＋特別扣除額」時，差額的部分就可以從所得稅總額中減除。 由於基本生活費是以申報戶人數計算，一般而言，同一申報戶人數越多，就越有機會享受到減稅利益。\n事實上：如有小孩跟長者時，生活費總額很難大於「免稅額＋一般扣除額＋特別扣除額」。\n計算方式：(1個人狀況)\n 基本稅額 個人的基本所得額超過670萬元者，其基本稅額為基本所得額扣除670萬元後，按20%計算的金額。\n選用ATM繳稅很方便 請於申報期限內，持郵局或開辦自動櫃員機轉帳繳稅作業之金融卡，至貼有「跨行：提款＋轉帳＋繳稅」標誌之自動櫃員機繳納。逾期繳納者，依法加徵滯納金及滯納利息。\n稅制重點與節稅方法 1、綜合所得總額不等於綜合所得淨額\n是不是年收一百萬(適用12%稅率)，就得付12萬稅金呢？ 答案：No\n一般來說，單身免稅額+扣除額至少40.8萬，所以低於這個數字即不用繳稅\n所以單身年收一百萬，實際的課稅金額為59.2萬(100-40.8)，如以12%來計算，就是需繳7.1萬(59.2*0.12)。\n 綜合所得總額 -（免稅額+標準/列舉扣除額+特別扣除額）= 綜合所得淨額\n 2、股利可抵稅\n3、薪資所得及執行業務所得差異\n受僱收入為薪資所得，帳面上完全逃不了，沒辦法扣除成本費用。\n執行業務所得則是自行開業，可以扣除費用率，較為優待。\n4、合法節稅\n 結婚(標準扣除額12萬變24萬)、多生孩子(幼兒學前特別扣除額12萬xN，限所得稅率5%、12%及基本所得額670萬以下家庭使用) \u0026lt;\u0026ndash; 不可行，會花費更多… 扶養親屬，從家長、直系尊親屬超過70歲免稅額13.2萬，其餘免稅額8.8萬xN 金融機構利息收入可扣除(儲蓄投資特別扣除額27萬以下) 重購自用住宅優惠(大屋換小屋比例退稅、小屋換大屋全額退稅←退當年繳納的綜合所得稅) 有單據的捐贈 保險費2.4萬以下都可以扣除 房屋租金12萬以下(跟購屋借款利息擇一) 海外所得100萬以下免納綜合所得稅(但超過100萬則是全數列入基本所得稅額計算，稅率20%) 證券、期貨交易免納綜合所得稅(僅有證券/期貨交易稅加上手續費)  (N是人口數)\n參考資料  露西瓜挖大編  批踢踢medstudent-caterpillar2   ","date":"2022年05月23日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/posts/f017-2022-note-tax/","series":null,"smallImg":"","tags":["心得"],"title":"2022報稅個人心得記錄"},{"categories":["軟體"],"content":"Atom-mermaid 2022/5/19 下午10:59:26\n Atom-mermaid   前言  原生 - Flowchart (1)  原生 - Flowchart (2)  原生 - Sequence  Mermaid - Graph (1)  Mermaid - Graph (2)  Mermaid - Graph (3)  Mermaid - sequenceDiagram  Mermaid - Flowchart  Mermaid - Pie  Mermaid - Gantt  波形圖 - WaveDrom (只能在Atom上顯示)  參考資料     前言  一畫勝千言(A picture is worth a thousand words)\n 您可以在 Markdown 文件中使用自帶的 Mermaid (美人魚) 套件來用文字(像在寫程式)快速創建和編輯出好看又實用的圖形。以下是我會用到的類型，更多可參考 這裡 。\n 原生 - Flowchart (1) Markdown寫法 (只能在Atom上顯示)\n` ` `flow start=\u0026gt;start: 開始 loginInfo=\u0026gt;inputoutput: 數據登入 verifyLogin=\u0026gt;subroutine: 登入驗證 isSuccess=\u0026gt;condition: 驗證成功？ respondSuccess=\u0026gt;operation: 回應成功 responseFailure=\u0026gt;operation: 回應失敗 end=\u0026gt;end: 結束 start-\u0026gt;loginInfo-\u0026gt;verifyLogin-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;respondSuccess-\u0026gt;end isSuccess(no)-\u0026gt;responseFailure-\u0026gt;loginInfo ` ` ` 結果 (圖片)\n  原生 - Flowchart (2) Markdown寫法 (只能在Atom上顯示)\n` ` `flow start=\u0026gt;start: 開始 dataCollect=\u0026gt;operation: 資料收集 dataProcess=\u0026gt;operation: 資料處理 isSuccess=\u0026gt;condition: 正確？ end=\u0026gt;end: 結束 start-\u0026gt;dataCollect-\u0026gt;dataProcess-\u0026gt;isSuccess isSuccess(yes)-\u0026gt;end isSuccess(no)-\u0026gt;dataCollect ` ` ` 結果 (圖片)\n  原生 - Sequence Markdown寫法 (只能在Atom上顯示)\n` ` `sequence {theme=\u0026#34;hand\u0026#34;} PC-\u0026gt;Device: Get Data Device--\u0026gt;PC: Data Note left of PC: 192.168.1.1 Note right of Device: 192.168.1.2 ` ` ` 結果 (圖片)\n 結果 sequence {theme=\u0026ldquo;hand\u0026rdquo;} (圖片)\n  Mermaid - Graph (1) Markdown寫法\n` ` `mermaid graph TD A[開始] --\u0026gt;|程式執行| B(數據證入) B --\u0026gt; |使用者輸入資料| C(登入驗證) C --\u0026gt; D{驗證成功?} D --\u0026gt;|yes| E(回應成功) E --\u0026gt; G(結束) D --\u0026gt;|no| F(回應失敗) F --\u0026gt; |請重新輸入| C ` ` ` 結果\ngraph TD A[開始] --|程式執行| B(數據證入) B -- |使用者輸入資料| C(登入驗證) C -- D{驗證成功?} D --|yes| E(回應成功) E -- G(結束) D --|no| F(回應失敗) F -- |請重新輸入| C   Mermaid - Graph (2) Markdown寫法\n` ` `mermaid graph TD A[開始] --\u0026gt; B(資料收集) B --\u0026gt; C(資料處理) C --\u0026gt; D{正確?} D --\u0026gt;|yes| E[結束] D --\u0026gt;|no| B ` ` ` 結果\ngraph TD A[開始] -- B(資料收集) B -- C(資料處理) C -- D{正確?} D --|yes| E[結束] D --|no| B   Mermaid - Graph (3) Markdown寫法\n` ` `mermaid graph TD; A---|\u0026#34;Yes\u0026#34;| B; A--\u0026gt;|\u0026#34;No\u0026#34;| C; B==\u0026gt;|\u0026#34;Go\u0026#34;| D; C-.-\u0026gt;D; ` ` ` 結果\ngraph TD; A---|\"Yes\"| B; A--|\"No\"| C; B==|\"Blod\"| D; C-.-D;   Mermaid - sequenceDiagram Markdown寫法\n` ` `mermaid sequenceDiagram autonumber Note left of PC: 192.168.1.1 Note right of Device: 192.168.1.2 Note over PC,Device: RS232 PC-\u0026gt;\u0026gt;+Device: Are you Ready? Device--\u0026gt;\u0026gt;-PC: I am Ready %% this is a comment loop Every 1 sec PC-\u0026gt;\u0026gt;+Device: Get Data Device--\u0026gt;\u0026gt;-PC: Sent end ` ` ` 結果\nsequenceDiagram autonumber Note left of PC: 192.168.1.1 Note right of Device: 192.168.1.2 Note over PC,Device: RS232 PC-+Device: Are you Ready? Device---PC: I am Ready %% this is a comment loop Every 1 sec PC-+Device: Get Data Device---PC: Sent end   Mermaid - Flowchart Markdown寫法\n` ` `mermaid flowchart TD A[Run] --\u0026gt; B{Is it Already Run?}; B -- Yes --\u0026gt; C[Do not deploy]; B -- No --\u0026gt; D[Run deploy.sh]; C --\u0026gt; E[END] D --\u0026gt; F[Wait 1 sec] F --\u0026gt; B ` ` ` 結果\nflowchart TD A[Run] -- B{Is it Already Run?}; B -- Yes -- C[Do not deploy]; B -- No -- D[Run deploy.sh]; C -- E[END] D -- F[Wait 1 sec] F -- B   Mermaid - Pie Markdown寫法\n` ` `mermaid pie showData title 工作分配表 \u0026#34;讀書\u0026#34; : 15 \u0026#34;研究\u0026#34; : 60 \u0026#34;App開發\u0026#34; : 20 \u0026#34;其他\u0026#34; : 5 ` ` ` 結果\npie showData title 研究工作分配表 \"讀文獻\" : 5 \"研究過程\" : 70 \"寫論文\" : 20 \"其他\" : 5   Mermaid - Gantt Markdown寫法\n` ` `mermaid gantt title 甘特圖 dateFormat MM-DD section 系統開發時程 項目啓動 :done,des1,03-09,7d 項目計劃 :done,des2,after des1,6d 需求分析 :done,des3,after des2,9d 軟件設計 :done,des4,after des3,12d 軟件編碼 :crit,active,des5,04-07,20d 軟件測試 :des6,04-14,15d 項目交付 :des7,after des6,4d ` ` ` 結果\ngantt title 甘特圖 dateFormat MM-DD section 系統開發時程 項目啓動 :done,des1,03-09,7d 項目計劃 :done,des2,after des1,6d 需求分析 :done,des3,after des2,9d 軟件設計 :done,des4,after des3,12d 軟件編碼 :crit,active,des5,04-07,20d 軟件測試 :des6,04-14,15d 項目交付 :des7,after des6,4d   波形圖 - WaveDrom (只能在Atom上顯示) Markdown寫法 [Reference] \n` ` `wavedrom { signal: [ { name: \u0026#34;pclk\u0026#34;, wave: \u0026#39;p.......\u0026#39; }, { name: \u0026#34;Pclk\u0026#34;, wave: \u0026#39;P.......\u0026#39; }, { name: \u0026#34;nclk\u0026#34;, wave: \u0026#39;n.......\u0026#39; }, { name: \u0026#34;Nclk\u0026#34;, wave: \u0026#39;N.......\u0026#39; }, {}, { name: \u0026#39;clk0\u0026#39;, wave: \u0026#39;phnlPHNL\u0026#39; }, { name: \u0026#39;clk1\u0026#39;, wave: \u0026#39;xhlhLHl.\u0026#39; }, { name: \u0026#39;clk2\u0026#39;, wave: \u0026#39;hpHplnLn\u0026#39; }, { name: \u0026#39;clk3\u0026#39;, wave: \u0026#39;nhNhplPl\u0026#39; }, { name: \u0026#39;clk4\u0026#39;, wave: \u0026#39;xlh.L.Hx\u0026#39; }, ]} ` ` ` 結果 (圖片)\n 參考資料  https://mermaid-js.github.io/mermaid/#/  https://www.joelshetler.com/computer-reference/mermaid/  https://note.qidong.name/2020/07/mermaid/  https://gohugo.io/content-management/diagrams/  https://hhhsmilehhh.gitee.io/2020/10/hugo%E5%AE%9E%E7%8E%B0markdown%E7%9A%84mermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/  https://gist.github.com/blackcater/1701e845a963216541591106c1bb9d3b  https://ithelp.ithome.com.tw/articles/10234553  Mermaid線上編寫工具   ","date":"2022年05月20日","img":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature_hu4d00a60f032c5753b25d3114a66f076c_33039_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f016-markdown-mermaid/feature_hu4d00a60f032c5753b25d3114a66f076c_33039_180x0_resize_q75_box.jpg","tags":["Markdown"],"title":"Markdown文件中畫圖"},{"categories":["生活","維修"],"content":"DIY強效電鍍品還原(清潔)劑 常常看Youtube-海賊王DIY日記 ，他都會無私的分享生活中的妙招，其中這篇 就很實用，記錄一下配方及使用注意事項。\n適用對象 表面有鏽斑，例如：鐵、電鍍製品、不鏽鋼\n化工材料  鹽酸 (濃度17%) 非離子介面活性劑  蝦皮上買的\n 其他材料  手套 乾布 衛生紙  藥劑比例 界面活性劑:鹽酸 = 3:97 (調製時請保持環境通風)使用方式  帶手套，將調配好的藥劑適量的佔在乾布上 塗在電鍍品上並來回擦拭表面 (請先局部測試，有效果再大規模使用) 最後記得用衛生紙擦乾，不要用水洗! (重要)  為何需要加界面活性劑？ 界面活性劑可分解表面油脂，讓鹽酸能更徹底的接觸到鏽斑，加速除鏽效果。\n 家中有小孩的，千萬不要把這樂劑液體裝在飲料罐裡，避免被小孩當飲料喝。 如家中沒小孩又非得裝在飲料罐裡時，請在飲料罐外寫上內容物及警語!!參考資料 海賊王DIY日記  \n (效果驚人)\n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f015-diy/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f015-diy/feature_hu4d00a60f032c5753b25d3114a66f076c_12585_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f015-diy/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f015-diy/feature_hu4d00a60f032c5753b25d3114a66f076c_12585_180x0_resize_q75_box.jpg","tags":["DIY"],"title":"DIY強效電鍍品還原(清潔)劑"},{"categories":["遊戲機"],"content":"Game and Watch - ZELDA電路板      參考資料 Landsat網友提供@Discord(stacksmashing) \n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature_hu4d00a60f032c5753b25d3114a66f076c_19975_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f013-gnw-zelda-circuitboard/feature_hu4d00a60f032c5753b25d3114a66f076c_19975_180x0_resize_q75_box.jpg","tags":["Game\u0026Watch"],"title":"Game and Watch - ZELDA電路板"},{"categories":["生活","料理"],"content":"工科男料理 - 香煎櫛瓜 新鮮的櫛瓜吃來爽脆又清甜，表皮薄而光滑的櫛瓜能連皮帶籽一起食用，處理起來可說是非常方便(工科男最愛)。今天來挑戰簡單好吃的 香煎櫛瓜 。\n準備食材  櫛瓜 切去兩邊蒂頭，切成約0.5公分的厚度 麵粉 適量 (地瓜粉也可以) 蛋 1顆 鹽巴 適量 香料 (黑胡椒粒或您喜歡的香料) 適量  步驟  打蛋，並加入鹽巴及香料調味 將櫛瓜表面均勻沾上一層薄麵粉 熱鍋下油，將沾了蛋液的櫛瓜兩面煎至金黃色即可  PS.剩下沒沾完的蛋液別浪費，可煎來吃喔!!重點 蛋液可以調鹹一點，這樣吃起來比較有味道。如何知道櫛瓜熟了呢？兩面煎至金黃色中間用筷子可輕易插入即可。\n成果  參考資料 簡單哥 煎櫛瓜 \n","date":"2022年05月15日","img":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature_hu4d00a60f032c5753b25d3114a66f076c_108396_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f012-cooking-02/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f012-cooking-02/feature_hu4d00a60f032c5753b25d3114a66f076c_108396_180x0_resize_q75_box.jpg","tags":[],"title":"薑絲炒絲瓜"},{"categories":["軟體"],"content":"如何完整備份/還原SD卡(Linux篇) 測試環境：Linux OS 準備工作 插入SD卡後，先使用 dmesg 或 df 等指命找出備份設備的編號，會是 sd# (#: b, c, d..)。一般來說，系統碟會是sda。\n備份 sudo dd if=/dev/sdx of=/path/to/backup.img bs=1M status=progress # if 來源地 # of 備份地 # /path/to/backup.img 備份後檔案放這位置 還原 推薦使用 balenaEtcher  免費工具。\n 參考資料 Tsung\u0026rsquo;s Blog \n","date":"2022年05月14日","img":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature_hu4d00a60f032c5753b25d3114a66f076c_6475_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f014-linux-clone-sdcard/feature_hu4d00a60f032c5753b25d3114a66f076c_6475_180x0_resize_q75_box.jpg","tags":["Linux"],"title":"如何完整備份/還原SD卡(Linux篇)"},{"categories":["生活","料理"],"content":"工科男料理 - 薑絲炒絲瓜 秋天到，正是吃瓜時。絲瓜可以變化出很多種好吃的料理，例如：絲瓜炒蛋、絲瓜蛤蜊或絲瓜麵線。今天來挑戰簡單好吃的 薑絲炒絲瓜 。\n準備食材  絲瓜 削皮去兩邊蒂頭，切成約一公分的厚度 薑 切長條 鹽 隨意 熱水  步驟  冷油(多放一點)即可下絲瓜，讓每個絲瓜都吸到油 倒熱水(不用太多，蓋到絲瓜平放高度1/2即可) 蓋鍋悶煮3分鐘 起鍋前，放入薑絲拌炒一下  重點 要讓絲瓜顏色翠綠重點是 不放鹽 ，並且 煮的時間不要過長 (所以用熱水來縮短時間)\n成果  (沒放蝦皮一樣好吃)\n參考資料 阿基師家常菜 薑絲炒絲瓜 \n","date":"2022年05月14日","img":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature_hu4d00a60f032c5753b25d3114a66f076c_74098_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f011-cooking-01/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f011-cooking-01/feature_hu4d00a60f032c5753b25d3114a66f076c_74098_180x0_resize_q75_box.jpg","tags":[],"title":"薑絲炒絲瓜"},{"categories":["軟體"],"content":"Markdown使用心得記錄 Markdown哲學   易讀易寫：Markdown的語法全由 [標點符號] 所組成。 可讀性強：可以直接以 [純文字] 發佈，並且看起來不會像是由許多標籤或是格式指令所構成。   Markdown基本語法 § 標題(Title) 將 # 符號置於標題前面便能將文字顯示為標題大小，#的數量決定標題大小，#號後面有空一格。\n語法：\n# 這是H1標題 ## 這是H2標題 ### 這是H3標題 #### 這是H4標題 ##### 這是H5標題 ###### 這是H6標題 結果：\n這是H1標題 這是H2標題 這是H3標題 這是H4標題 這是H5標題 這是H6標題 § 引用文字(Block) 利用 \u0026gt; 符號顯示引用文字，\u0026gt; 號後面有空一格。\n語法：\n\u0026gt; 靜思語：生氣是拿別人做錯的事來懲罰自己 結果：\n 靜思語：生氣是拿別人做錯的事來懲罰自己\n § 文字格式(Styling text)  在文字前後加*，便顯示斜體 在文字前後加**，便顯示粗體 ~~ ~~中間的文字會加上刪除線  語法：\n**粗體** *斜體* ~~我寫錯了~~ 結果：\n粗體 斜體 我寫錯了 § 列點(List) 無序列點：可以用「*」或「-」或「+」列點，記得後面的文字之間要空一格。\n語法：\n* Java * Python - Boy - Girl + Sun + Moon 結果：\n Java Python   Boy Girl   Sun Moon  有序列表：直接以1、2、3、4…列點。列點與後面的文字之間也要空一格。\n語法：\n1. 前言 2. 目標 3. 結論 結果：\n 前言 目標 結論  巢狀列表：需縮排的列表，使用半型空白空3格。\n語法：\n1. 目標 1. 發表文章 2. 申請專利 3. 貢獻 2. 研究著作 * Conference * SCI/EI 3. 結論 結果：\n 目標  發表文章 申請專利 貢獻   研究著作  Conference SCI/EI   結論   § 程式碼格式(Code formatting) 在文字區塊的上下方輸入3個反引號「```」， 或用4個空格就可以mark出程式碼區塊。\n語法：(前面不用空隔)\n```python import numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) ``` 結果：(沒標記語法格式)\nimport numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) 結果：(標記語法格式python)\nimport numpy as np time = np.arange(0, 10, 0.1) amplitude = np.sin(time) 語法格式keyword: shell, cpp, python, ruby, javascript, SQL, \u0026hellip;\n§ 連結(URL) [連結文字](連結位置)\n語法：\n[Google](https://www.google.com) 結果： Google \n§ 表格(Table) 利用分割符號”-“和”|”建立表格。:可用來決定文字對齊方式(置中/靠左/靠右)\n語法：\n| 姓名 | 住址 | 學號 | | :---- | :--: | ---: | | 阿華田 | 台北 | 25 | | 李大明 | 台中 | 28 | 結果：\n   姓名 住址 學號     阿華田 台北 25   李大明 台中 28    參考資料   Markdown說明 \n  深藏若虛 - Markdown 表格語法原則 \n  ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature_hu4d00a60f032c5753b25d3114a66f076c_13782_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f010-markdown-study/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f010-markdown-study/feature_hu4d00a60f032c5753b25d3114a66f076c_13782_180x0_resize_q75_box.jpg","tags":["Markdown"],"title":"Markdown使用心得記錄"},{"categories":["軟體"],"content":"Python3 print with timestamp import sys import datetime old_f = sys.stdout class F: def write(self, x): old_f.write(x.replace(\u0026#34;\\n\u0026#34;, \u0026#34; [%s]\\n\u0026#34; % str(datetime.datetime.now()))) def flush(self): pass sys.stdout = F() print(\u0026#39;Hello World\u0026#39;) 結果：\n Hello World [2021-05-11 22:57:49.179915]\n ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f009-python-print-timestamp/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_180x0_resize_q75_box.jpg","tags":["Python"],"title":"Python - Print任何東西後面接時間"},{"categories":["軟體"],"content":"sys.version_info sys.version_info提供一組 tuple 來表示當前 Python 的版本\nimport sys Py2 = sys.version_info.major == 2 Py3 = sys.version_info.major == 3 如此可用來判斷目前是使用 Python 2 或 Python 3，進一步控制程式走向\n應用場景  判斷Python版本，分別載入不同版本的函式庫\n import sys if sys.version_info[0] \u0026gt;= 3: import PySimpleGUI as sg else: import PySimpleGUI27 as sg ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f008-python-check-version/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f008-python-check-version/feature_hu4d00a60f032c5753b25d3114a66f076c_12252_180x0_resize_q75_box.jpg","tags":["Python"],"title":"Python - 程式碼中判斷當前Python版本"},{"categories":["遊戲機"],"content":"安裝 CheatMaster Fusion (CMF) 將下載的CMF檔COPY到SD卡根目錄底下。\n下載網路上找到的PSP金手指大全1215个CMF金手指合集 同樣將檔案COPY到SD卡裡\n操作方式 進到遊戲中後按「音符」鍵可叫出選單\n 在CMF設定中啟動自動載入cmf檔(不然金手指檔案太多不好找)\n亂碼問題 將所有的cmf檔轉成Big5格式\n在Windows下還是顯示亂碼，但在CM中可正常顯示繁體中文。\nCMF還可以 玩GBA模擬器時，亦可叫出找記憶體位置修改遊戲數值。\n","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature.png","largeImg":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature_hu3139b2cf40873b452da89276f47ee888_39324_500x0_resize_box_3.png","permalink":"https://crrsn.github.io/blog/posts/f007-psp-cheat/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f007-psp-cheat/feature_hu3139b2cf40873b452da89276f47ee888_39324_180x0_resize_box_3.png","tags":["金手指","PSP"],"title":"Sony PSP 金手指 CMF"},{"categories":["遊戲機"],"content":"Yahoo拍賣 買的二手 PSone 主機  型號  內部 (有改機晶片？)   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f006-psone/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f006-psone/feature_hu4d00a60f032c5753b25d3114a66f076c_11259_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f006-psone/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f006-psone/feature_hu4d00a60f032c5753b25d3114a66f076c_11259_180x0_resize_q75_box.jpg","tags":["PS","PSOne"],"title":"Sony PSone 遊戲主機"},{"categories":["遊戲機","維修"],"content":"拿到一台「月光寶盒」型的機板，HDMI頭故障無法輸出  HDMI規格   處理方式 使用熱風槍將故障的HDMI Port給拆下來，換上新買的後就正常了。\n","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature_hu4d00a60f032c5753b25d3114a66f076c_15713_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f005-hdmi-port-fix/feature_hu4d00a60f032c5753b25d3114a66f076c_15713_180x0_resize_q75_box.jpg","tags":["HDMI"],"title":"月光寶盒 HDMI Port 故障更換"},{"categories":["遊戲機"],"content":"GW內部 - Mario 記得先斷電\n 換晶片(MX25U51245GZ4I00) 型號：MX25U51245GZ4I00 連結：Digi-Key \n 腳位圖 網路上找到的\n    功能 RP3腳位 GW TYPE-C     5V 2 B9   GND 20 B1   SWDIO 18 (GPIO 24) B6   SWCLK 22 (GPIO 25) B7    使用Raspberry Pi 3進行刷機(雙系統) 根據參考資料 進行設定\n 如何提高刷機成功率  將GW的電池斷開 按住GW的Power開關後插上TYPE-C供電 執行刷機指令(持續按住GW的Power開關) 待畫面跑到Loading image into RAM時，再放開GW的開關，刷機會持續至完成  參考資料  麥斯的古中作樂 MaXX\u0026rsquo;s Retro Fun   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f004-gw/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f004-gw/feature_hu4d00a60f032c5753b25d3114a66f076c_22985_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f004-gw/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f004-gw/feature_hu4d00a60f032c5753b25d3114a66f076c_22985_180x0_resize_q75_box.jpg","tags":["Game\u0026Watch"],"title":"Game and Watch 刷機研究 - 硬體篇"},{"categories":["軟體"],"content":"排除方法 Method 1: 只排除這個git專案 利用Terminal，進到git專案下，新增.gitignore檔案，並在裡頭輸入要排除追蹤的檔案名稱。操作如下：\n# 新增 touch ~/.gitignore # 編輯 vim ~/.gitignore # .gitignore檔案 .DS_Store .gitignore Method 2: 全面排除所有git專案 在根目錄下(MAC/Linux 系統就是指使用者名稱)，新增一個 ~/.gitignore_global檔案。之後用文字編輯器打開，並在裡頭輸入要排除的檔案名稱。操作如下：\n# 新增 touch ~/.gitignore_global # 編輯 vim ~/.gitignore_global # 在.gitignore_global檔案中加入 .DS_Store .DS_Store? .Spotlight-V100 .Trashes 存檔後，再輸入以下程式碼\ngit config --global core.excludesfile ~/.gitignore_global PS: 若先前已追蹤過.DS_Store檔該怎麼辦？ 在git專案下將其刪除追蹤即可，指令如下\n# 移除當前資料夾下的.DS_Store文件 git rm --cached .DS_Store 完成後，再重新 commit 並Push到遠端即可。\ngit add . git commit -m \u0026#39;xxxx\u0026#39; git push -u origin main 參考資料  地瓜大的飛翔旅程   ","date":"2022年05月11日","img":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature_hu4d00a60f032c5753b25d3114a66f076c_10191_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f003-git-ignore/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f003-git-ignore/feature_hu4d00a60f032c5753b25d3114a66f076c_10191_180x0_resize_q75_box.jpg","tags":["Git"],"title":"Git如何忽略.DS_Store等排除檔案"},{"categories":["軟體"],"content":"文章目錄  文章目錄   測試平台  Atom介紹  什麼是Markdown (md檔案格式)  準備工作  常用外掛  安裝外掛  外掛介紹   markdown-toc  markdown-preview-enhanced  insert-timestamp  language-markdown  markdown-img-paste  markdown-table-editor  markdown-to-pdf與pdf-view    參考資料     測試平台 Windows 10 \u0026amp; MAC OS 11.5.2\nAtom介紹 Atom 是 Github 專門為程式設計師推出的跨平臺文字編輯器，可支援Windows/Mac/Linux等常用作業系統。\n什麼是Markdown (md檔案格式) Markdown是一種使用普通文字編輯器編寫的標記語言，通過簡單語法可以使普通文字內容具有一定的格式，但無法任意使用其他字型或文字變色。Github上的Readme.md就是用Markdown語法寫成的。\n準備工作   安裝Atom軟體 (軟體下載 ) 設定Atom主題 Windows: (file-\u0026gt;settings-\u0026gt;Themes可以設定主題) / MAC: (Preferences-\u0026gt;Themes可以設定主題) 安裝常用外掛(packages)   常用外掛   markdown-toc(主要用來快速生成markdown目錄) markdown-preview-enhanced(含同步滾動預覽，Latex公式預覽) language-markdown(程式碼增強) markdown-img-paste(剪貼簿圖片快速貼上到md檔案) insert-timestamp(md檔案中快速插入當前時間,寫部落格或日誌常用) markdown-table-editor(md檔案快速生成表格) markdown-to-pdf (pdf生成匯出) pdf-view(pdf預覽)   安裝外掛 開啟Terminal執行：\n//安裝完Atom程式後，就可以使用apm指令 apm install markdown-toc apm install markdown-preview-enhanced apm install language-markdown apm install markdown-img-paste apm install insert-timestamp apm install markdown-table-editor //亦可以一次安裝多個外掛 apm install markdown-to-pdf pdf-view 外掛介紹  注意：如某外掛無法使用時，請到Atom的Settings(Mac是Preference)中的Install裡，利用search功能找到對應的外掛，將其Disable再Enable即可正常使用。\n  markdown-toc 主要使用它來快速生成目錄。使用ctrl+alt+c就可以生成目錄，使用ctrl+alt+u可以更新目錄。\n 下圖就是使用mardown-toc自動產生的目錄結構。注意：一定要有第一層「#」，才能正常顯示。\n  markdown-preview-enhanced 同步滾動預覽功能(支援預覽Latex公式)。使用方法是用Atom開啟一個*.md的檔案後，按ctrl+shift+m即可在右側開啟同步的滾動預覽頁面。\ninsert-timestamp 該外掛可以md檔案中快速插入當前時間，寫部落格或日誌時常用。安裝好後，enable外掛。使用ctrl+shift+alt+t就可以外掛當前時間。\nMAC的alt是option，按法如下圖\n language-markdown 程式碼著色增強外掛。除了能給程式碼著色，還提供了快捷的程式碼片段生成等功能。\nclass MyClass { // The class  public: // Access specifier  int myNum; // Attribute (int variable)  string myString; // Attribute (string variable) }; int main() { MyClass myObj; // Create an object of MyClass  // Access attributes and set values  myObj.myNum = 15; myObj.myString = \u0026#34;Some text\u0026#34;; // Print attribute values  cout \u0026lt;\u0026lt; myObj.myNum \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; cout \u0026lt;\u0026lt; myObj.myString; return 0; } markdown-img-paste 安裝這個外掛後，我們可以將用任意的截圖軟體截圖後(只要截圖儲存在剪貼簿中)，使用ctrl+shift+v就可將圖片貼上到.md檔案中，並生成一個空白的title讓你填寫，在預覽中顯示出圖片。這個圖片會預設儲存在.md檔案同目錄下的assets資料夾中。\n 在assets中自動產生\n markdown-table-editor 使用時在行首輸入|，然後按Tab，寫入這個單元格的內容，寫完了一個單元格再按Tab。即建立了一個單元格。寫完表格一行在最後面按enter會自動生成下一行同樣列數的單元格。\n格式：\n 結果：\n   外掛名稱 功能說明     markdown-toc 快速生成markdown目錄   markdown-preview-enhanced 同步滾動預覽   language-markdown 程式碼增強   markdown-img-paste 剪貼簿圖片快速貼上到md檔案    markdown-to-pdf與pdf-view 將md檔案快速儲存為pdf的外掛與pdf預覽外掛。\n按ctrl+s先儲存檔案，然後在編輯區點選右鍵-\u0026gt;Convert to PDF或者使用快捷鍵ctrl+alt+e可以匯出PDF並預覽，匯出的pdf預設與.md在同一資料夾內。\n參考資料  程式人生  YiTing隨筆記   ","date":"2022年05月10日","img":"https://crrsn.github.io/blog/posts/f002-atom/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f002-atom/feature_hu4d00a60f032c5753b25d3114a66f076c_19796_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f002-atom/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f002-atom/feature_hu4d00a60f032c5753b25d3114a66f076c_19796_180x0_resize_q75_box.jpg","tags":["Markdown","Atom"],"title":"讓Atom編輯Markdown文件更好用"},{"categories":null,"content":"大家好，歡迎來到工科男LEO's Blog網站\n這個網站主要是寫些「生活記錄、心得分享、個人筆記」等等…\n記錄一些我感興趣 或是 生活中遇到某些問題解決的方法與心得\n歡迎大家來交流\n","date":"2022年05月10日","img":"","largeImg":"","permalink":"https://crrsn.github.io/blog/about/","series":null,"smallImg":"","tags":null,"title":"關於我"},{"categories":["生活"],"content":"我的第一篇Blog 2022年5月10日 建立人生第一個Blog網頁\n環境: MAC OS 11.5.2\nPath: .文件/website/blog\n使用工具介紹 HUGO網頁架構 參考教學: marcolee , cfanz \n註：cfanz所使用的風格有問題，所以改選用hugo-theme-bootstrap 風格\n需安裝 hugo mod npm pack npm install hugo server MacDown編輯工具  可用來編輯mackdown格式的文本。 [LINK] \nAtom維輯工具 詳見這篇 \n常用指令 啟動 Hugo 伺服器，指令如下。 http://localhost:1313/ \n# 看所有東西(含draft = true的文章) hugo server -D # 只顯示draft = false的文章 hugo server 新增頁面\nhugo new posts/name-of-post/index.zh-tw.md 用上面的方法會新增一個資料夾(name-of-post)就在./content/posts裡， 所有用到的圖片(ex: img.jpg)都可放在這裡面，要貼圖就下(img.jpg)即可。\n##如何發布到Github上 在blog根目錄下執行：\nhugo 進到./blog/public裡去進行git commit，最後再執行：\ngit push -u origin main Git指令 cd public git init git remote add origin https://github.com/your-git-id/your-repo-name.git git add . git ci -m \u0026#39;first commit\u0026#39; git push -u origin main ","date":"2022年05月10日","img":"https://crrsn.github.io/blog/posts/f001-firstblog/feature.jpg","largeImg":"https://crrsn.github.io/blog/posts/f001-firstblog/feature_hu4d00a60f032c5753b25d3114a66f076c_13789_500x0_resize_q75_box.jpg","permalink":"https://crrsn.github.io/blog/posts/f001-firstblog/","series":null,"smallImg":"https://crrsn.github.io/blog/posts/f001-firstblog/feature_hu4d00a60f032c5753b25d3114a66f076c_13789_180x0_resize_q75_box.jpg","tags":["Blog","第一次","Hugo"],"title":"建立人生第一個Blog網頁"}]